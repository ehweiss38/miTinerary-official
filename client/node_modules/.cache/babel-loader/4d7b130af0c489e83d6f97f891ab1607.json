{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Code/myTinerary/client/src/components/Algo/Search/AlgoSearchHome.js\";\nimport React from \"react\";\nimport Endpoints from \"./Form/Endpoints\";\nimport Confirmation from \"./Form/confirmation/Confirmation\";\nimport ExtraCities from \"./Form/ExtraCities/ExtraCities\";\nimport Outline from \"./Form/Outline/Outline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlgoSearchHome extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      display: 'endpoints',\n      startCity: \"\",\n      startCountry: \"\",\n      endCity: \"\",\n      endCountry: \"\",\n      stops: \"\",\n      sState: null,\n      eState: null,\n      missing: false\n    };\n    this.setSearch = (value, targ) => {\n      if (targ === 'startCity') {\n        this.setState({\n          startCity: value\n        });\n      }\n      if (targ === 'startCountry') {\n        this.setState({\n          startCountry: value\n        });\n      }\n      if (targ === 'endCity') {\n        this.setState({\n          endCity: value\n        });\n      }\n      if (targ === 'endCountry') {\n        this.setState({\n          endCountry: value\n        });\n      }\n      if (targ === 'stops') {\n        this.setState({\n          stops: value,\n          missing: false\n        });\n      }\n      if (targ === 'sState') {\n        this.setState({\n          sState: value\n        });\n      }\n      if (targ === 'eState') {\n        this.setState({\n          eState: value\n        });\n      }\n    };\n    this.endPointSubmit = e => {\n      e.preventDefault();\n      if (!parseInt(this.state.stops)) {\n        this.setState({\n          missing: true\n        });\n        return;\n      }\n      //dealing w/ states: Pass as 3rd arg?\n      let states = \"\";\n      if (this.state.sState || this.state.eState) {\n        if (this.state.sState) {\n          states += this.state.sState;\n        } else {\n          states += 0;\n        }\n      }\n      if (this.state.sState) {\n        states += this.state.sState;\n      }\n      if (this.state.eState) {\n        states += \"_\" + this.state.eState;\n      }\n\n      //!!!!!!error if spelling mistake returns, con screen with 0\n      this.props.setValues(this.state.stops, this.state.startCity.trim() + \"_\" + this.state.startCountry.trim() + \"_\" + this.state.endCity.trim() + \"_\" + this.state.endCountry.trim() + \"_\" + this.state.stops + states);\n      return;\n      //?\n      //feels redundant with setvalues\n      //calls function passed from AlgoHome, which makes API Req\n    };\n    this.pointsConfirmed = () => {\n      console.log('extra', this.state);\n      this.setState({\n        display: 'extra'\n      });\n    };\n    this.reloadEndpoints = () => {\n      this.setState({\n        display: 'endpoints'\n      });\n    };\n  }\n  //Dont want this actually useEffect would be better\n  //come back to this\n  componentDidUpdate() {\n    const murica = {\n      'USA': 1,\n      \"US\": 1,\n      \"United States of America\": 1,\n      \"America\": 1\n    };\n    console.log('hi');\n    console.log(!!murica[this.state.startCountry]);\n    if (this.state.sState === null && murica[this.state.startCountry]) {\n      this.setState({\n        sState: \"\"\n      });\n    }\n    if (this.state.eState === null && murica[this.state.endCountry]) {\n      this.setState({\n        eState: \"\"\n      });\n    }\n    if (!murica[this.state.startCountry] && this.state.sState !== null) {\n      this.setState({\n        sState: null\n      });\n    }\n    if (!murica[this.state.endCountry] && this.state.eState !== null) {\n      this.setState({\n        eState: null\n      });\n    }\n    //console.log('did update',this.state.display,this.props.data)\n    //console.log(this.props.bad)\n    if (this.props.data && this.state.display === 'endpoints') {\n      this.setState({\n        display: 'confirmation',\n        missing: false\n      });\n    }\n    if (this.props.outline && this.state.display === \"extra\") {\n      console.log('outline set');\n      this.setState({\n        display: 'outline'\n      });\n    }\n  }\n  //some of these might be redundant\n\n  render() {\n    if (this.state.display === 'endpoints') {\n      return /*#__PURE__*/_jsxDEV(Endpoints, {\n        locations: this.state,\n        setSearch: this.setSearch,\n        endPointSubmit: this.endPointSubmit,\n        bad: this.props.bad,\n        missing: this.state.missing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this);\n    }\n    if (this.state.display === 'confirmation') {\n      return /*#__PURE__*/_jsxDEV(Confirmation, {\n        distance: this.props.distance,\n        data: this.props.data,\n        pointsConfirmed: this.pointsConfirmed,\n        clearState: this.props.clearState,\n        reloadEndpoints: this.reloadEndpoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this);\n    }\n    if (this.state.display === 'extra') {\n      return /*#__PURE__*/_jsxDEV(ExtraCities, {\n        extraStops: this.props.extraStops,\n        stops: parseInt(this.state.stops)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this);\n    }\n    if (this.state.display === 'outline') {\n      console.log('outline', this.props.outline);\n      return /*#__PURE__*/_jsxDEV(Outline, {\n        launch: this.props.launch,\n        mode: this.props.mode,\n        setMode: this.props.setMode,\n        outline: this.props.outline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default AlgoSearchHome;","map":{"version":3,"names":["React","Endpoints","Confirmation","ExtraCities","Outline","AlgoSearchHome","Component","state","display","startCity","startCountry","endCity","endCountry","stops","sState","eState","missing","setSearch","value","targ","setState","endPointSubmit","e","preventDefault","parseInt","states","props","setValues","trim","pointsConfirmed","console","log","reloadEndpoints","componentDidUpdate","murica","data","outline","render","bad","distance","clearState","extraStops","launch","mode","setMode"],"sources":["/Users/ethan/Desktop/Code/myTinerary/client/src/components/Algo/Search/AlgoSearchHome.js"],"sourcesContent":["import React from \"react\";\nimport Endpoints from \"./Form/Endpoints\";\nimport Confirmation from \"./Form/confirmation/Confirmation\";\nimport ExtraCities from \"./Form/ExtraCities/ExtraCities\";\nimport Outline from \"./Form/Outline/Outline\";\n\nclass AlgoSearchHome extends React.Component{\n    //forgot to pass to distance to confirmation\n    state={display:'endpoints',startCity:\"\",startCountry:\"\",endCity:\"\",endCountry:\"\", stops:\"\",sState:null,eState:null,missing:false}\n    setSearch=(value,targ)=>{\n        if(targ==='startCity'){\n            this.setState({startCity:value})\n        }\n        if(targ==='startCountry'){\n            this.setState({startCountry:value})\n        }\n        if(targ==='endCity'){\n            this.setState({endCity:value})\n        }\n        if(targ==='endCountry'){\n            this.setState({endCountry:value})\n        }\n        if(targ==='stops'){\n            this.setState({stops:value,missing:false})\n        }\n        if(targ==='sState'){\n            this.setState({sState:value})\n        }\n        if(targ==='eState'){\n            this.setState({eState:value})\n        }\n    }\n    \n    endPointSubmit=(e)=>{\n        e.preventDefault()\n        if(!parseInt(this.state.stops)){\n            this.setState({missing:true})\n            return\n        }\n        //dealing w/ states: Pass as 3rd arg?\n        let states=\"\"\n        if(this.state.sState||this.state.eState){\n            if(this.state.sState){\n                states+=this.state.sState\n            }else{\n                states+=0\n            }\n        }\n        if(this.state.sState){\n            states+=this.state.sState\n        }\n        if(this.state.eState){\n            states+=\"_\"+this.state.eState\n        }\n\n        //!!!!!!error if spelling mistake returns, con screen with 0\n        this.props.setValues(this.state.stops,this.state.startCity.trim()+\"_\"+this.state.startCountry.trim()+\"_\"+this.state.endCity.trim()+\"_\"+this.state.endCountry.trim()+\"_\"+this.state.stops+states)\n        return\n        //?\n        //feels redundant with setvalues\n        //calls function passed from AlgoHome, which makes API Req\n    }\n\n    //Dont want this actually useEffect would be better\n    //come back to this\n    componentDidUpdate(){\n        const murica={'USA':1,\"US\":1,\"United States of America\":1,\"America\":1}\n        console.log('hi')\n        console.log(!!murica[this.state.startCountry])\n        if(this.state.sState===null&&murica[this.state.startCountry]){\n            this.setState({sState:\"\"})\n        }\n        if(this.state.eState===null&&murica[this.state.endCountry]){\n            this.setState({eState:\"\"})\n        }\n        if(!murica[this.state.startCountry]&&this.state.sState!==null){\n            this.setState({sState:null})\n        }\n        if(!murica[this.state.endCountry]&&this.state.eState!==null){\n            this.setState({eState:null})\n        }\n        //console.log('did update',this.state.display,this.props.data)\n        //console.log(this.props.bad)\n        if(this.props.data&&this.state.display==='endpoints'){\n            this.setState({display:'confirmation',missing:false})\n        }\n        if(this.props.outline&&this.state.display===\"extra\"){\n            console.log('outline set')\n            this.setState({display:'outline'})\n        }\n    }\n    //some of these might be redundant\n    pointsConfirmed=()=>{\n        console.log('extra',this.state)\n        this.setState({display:'extra'})\n    }\n\n    //maybe better way but doing them seperately doesnt require major overhaul\n\n    //another way is to clear props.data after setting confirmation\n    //Might be possible but Id like to have that for future\n    reloadEndpoints=()=>{\n        this.setState({display:'endpoints'})\n    }\n\n    render(){\n        if(this.state.display==='endpoints'){\n            return(\n                <Endpoints locations={this.state} setSearch={this.setSearch} endPointSubmit={this.endPointSubmit} bad={this.props.bad} missing={this.state.missing}/>\n            )\n        }\n        if(this.state.display==='confirmation'){\n            return(\n                <Confirmation distance={this.props.distance} data={this.props.data} pointsConfirmed={this.pointsConfirmed} clearState={this.props.clearState} reloadEndpoints={this.reloadEndpoints}/>\n            )\n        }\n        if(this.state.display==='extra'){\n            return(\n                <ExtraCities extraStops={this.props.extraStops}stops={parseInt(this.state.stops)}/>\n            )\n        }\n        if(this.state.display==='outline'){\n            console.log('outline', this.props.outline)\n            return(\n                <Outline  launch={this.props.launch} mode={this.props.mode} setMode={this.props.setMode} outline={this.props.outline}/>\n            )\n        }\n        \n\n    }\n}\n\nexport default AlgoSearchHome"],"mappings":"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"},"metadata":{},"sourceType":"module"}