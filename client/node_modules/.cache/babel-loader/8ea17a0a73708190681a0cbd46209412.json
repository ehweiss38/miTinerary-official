{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Code/myTinerary/client/src/components/Algo/Search/Form/ExtraCities/ExtraCities.js\";\nimport React from \"react\";\nimport CityDisp from \"./CityDisp\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ExtraCities extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      stopsSelected: [],\n      cityText: \"\",\n      countryText: \"\"\n    };\n    this.updateText = (val, loc) => {\n      if (loc === 'city') {\n        this.setState({\n          cityText: val\n        });\n      }\n      if (loc === \"country\") {\n        this.setState({\n          countryText: val\n        });\n      }\n    };\n    this.addStop = async e => {\n      console.log('called');\n      e.preventDefault();\n      if (this.state.stopsSelected.length === parseInt(this.props.stops)) {\n        return;\n        //add error no more cities\n      }\n\n      const found = await this.confirm([this.state.cityText, this.state.countryText]);\n      //still have to be validated\n      //wont work rn\n      if (found) {\n        this.setState({\n          stopsSelected: [...this.state.stopsSelected, found],\n          cityText: '',\n          countryText: ''\n        });\n      }\n      //add error handling message\n    };\n  }\n\n  componentDidMount() {\n    console.log('Mounted');\n  }\n  async confirm(valPairs) {\n    let info;\n    let qs = valPairs[0] + '_' + valPairs[1];\n    try {\n      info = await axios.get(`http://localhost:7000/${valPairs}/extra`);\n    } catch (err) {\n      info = null;\n    }\n    return true;\n  }\n  //will add Search to validate\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card conBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Any specific places you want to Stop?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"You can add up to \", parseInt(this.props.stops) - this.state.stopsSelected.length, \" stops.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"(To be included, extra cities should be progressively far from the starting city, and should not involve considerable detours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CityDisp, {\n        cities: this.state.stopsSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"/\",\n        onSubmit: e => {\n          e.preventDefault();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Starting City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: 250\n            },\n            className: \"input is-danger\",\n            id: \"startpoint\",\n            type: \"text\",\n            value: this.state.cityText,\n            onChange: e => {\n              this.updateText(e.target.value, 'city');\n            },\n            name: \"city\",\n            placeholder: \"city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: 250\n            },\n            size: \"50\",\n            className: \"input is-danger\",\n            id: \"startCountry\",\n            type: \"text\",\n            value: this.state.countryText,\n            onChange: e => {\n              this.updateText(e.target.value, 'country');\n            },\n            name: \"country\",\n            placeholder: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button is-primary\",\n          type: \"submit\",\n          value: \"Add\",\n          onClick: e => {\n            this.addStop(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button is-danger\",\n          type: \"submit\",\n          value: \"Add\",\n          onClick: () => {\n            this.props.ExtraCities(this.state.stopsSelected);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default ExtraCities;\n\n/*\n<div>\n        <h2>Your trip will take you ${distance} miles, start to finish!</h2\n        <br>\n        <br>\n        <form method='POST' action=\"/plan\">\n            <h3>Before we depart, are there any specific places you want to stop along the way?</h3>\n            <input id=\"startpoint\" type=\"text\" value=\"\" name=\"stopCity\"/>\n            <input id=\"startCountry\" type=\"text\" value=\"\" name=\"stopCountry\"/>\n            <input type=\"submit\" value=\"Add to itinerary\"/>\n            <br>\n            <h4>Note: Destination must be reasonable in order to be added to itinerary. (Ex. If trip is from Japan to China, stopping in Brazil will not be possible)</h4>\n        </form>\n    </div>\n    */","map":{"version":3,"names":["React","CityDisp","axios","ExtraCities","Component","state","stopsSelected","cityText","countryText","updateText","val","loc","setState","addStop","e","console","log","preventDefault","length","parseInt","props","stops","found","confirm","componentDidMount","valPairs","info","qs","get","err","render","width","target","value"],"sources":["/Users/ethan/Desktop/Code/myTinerary/client/src/components/Algo/Search/Form/ExtraCities/ExtraCities.js"],"sourcesContent":["import React from \"react\";\nimport CityDisp from \"./CityDisp\";\nimport axios from \"axios\"\n\nclass ExtraCities extends React.Component{\n    state={stopsSelected:[], cityText:\"\", countryText:\"\"}\n\n    updateText=(val,loc)=>{\n        if(loc==='city'){\n            this.setState({cityText:val})\n        }\n        if(loc===\"country\"){\n            this.setState({countryText:val})\n        }\n    }\n\n    //add variable for constant spacing relative to max number of stops\n\n    addStop=async(e)=>{\n        console.log('called')\n        e.preventDefault()\n        if(this.state.stopsSelected.length===parseInt(this.props.stops)){\n            return\n            //add error no more cities\n        }\n        const found=await this.confirm([this.state.cityText,this.state.countryText])\n        //still have to be validated\n        //wont work rn\n        if(found){\n            this.setState({stopsSelected:[...this.state.stopsSelected,found],cityText:'',countryText:''})\n        }\n        //add error handling message\n        \n    }\n    componentDidMount(){\n        console.log('Mounted')\n    }\n    \n    async confirm(valPairs){\n        let info\n        let qs=valPairs[0]+'_'+valPairs[1]\n        try{\n           info=await axios.get(`http://localhost:7000/${valPairs}/extra`)\n        }catch(err){\n            info=null\n        }\n        return true\n    }\n    //will add Search to validate\n\n    render(){\n        return(\n        <div className=\"card conBox\">\n            <div className=\"center\">\n                <h1>Any specific places you want to Stop?</h1>\n            </div>\n            <br/>\n            <h4>You can add up to {parseInt(this.props.stops)-this.state.stopsSelected.length} stops.</h4>\n            <h5>(To be included, extra cities should be progressively far from the starting city, and should not involve considerable detours)</h5>\n            <CityDisp cities={this.state.stopsSelected}/>\n            <form action=\"/\" onSubmit={(e)=>{e.preventDefault()}}>\n                <div className=\"field\">\n                    <label>Starting City</label>\n                    <input style={{width:250}} className=\"input is-danger\" id=\"startpoint\" type=\"text\" value={this.state.cityText} onChange={(e)=>{this.updateText(e.target.value,'city')}} name=\"city\" placeholder=\"city\"/>\n                    <input style={{width:250}} size=\"50\" className=\"input is-danger\" id=\"startCountry\" type=\"text\" value={this.state.countryText} onChange={(e)=>{this.updateText(e.target.value,'country')}} name=\"country\" placeholder=\"Country\"/>\n                </div>\n                <input className=\"button is-primary\" type=\"submit\" value=\"Add\" onClick={(e)=>{this.addStop(e)}}/>\n                <input className=\"button is-danger\" type=\"submit\" value=\"Add\" onClick={()=>{this.props.ExtraCities(this.state.stopsSelected)}}/>\n            </form>\n        </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n\nexport default ExtraCities\n\n/*\n<div>\n        <h2>Your trip will take you ${distance} miles, start to finish!</h2\n        <br>\n        <br>\n        <form method='POST' action=\"/plan\">\n            <h3>Before we depart, are there any specific places you want to stop along the way?</h3>\n            <input id=\"startpoint\" type=\"text\" value=\"\" name=\"stopCity\"/>\n            <input id=\"startCountry\" type=\"text\" value=\"\" name=\"stopCountry\"/>\n            <input type=\"submit\" value=\"Add to itinerary\"/>\n            <br>\n            <h4>Note: Destination must be reasonable in order to be added to itinerary. (Ex. If trip is from Japan to China, stopping in Brazil will not be possible)</h4>\n        </form>\n    </div>\n    */"],"mappings":"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"},"metadata":{},"sourceType":"module"}