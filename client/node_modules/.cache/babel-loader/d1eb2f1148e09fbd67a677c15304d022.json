{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/ethan/Desktop/Code/miTinerary-official/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _regeneratorRuntime from\"/Users/ethan/Desktop/Code/miTinerary-official/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/ethan/Desktop/Code/miTinerary-official/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/ethan/Desktop/Code/miTinerary-official/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/ethan/Desktop/Code/miTinerary-official/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/ethan/Desktop/Code/miTinerary-official/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/ethan/Desktop/Code/miTinerary-official/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import axios from\"axios\";import AlgoSearchHome from\"./Search/AlgoSearchHome\";import{jsx as _jsx}from\"react/jsx-runtime\";var AlgoHome=/*#__PURE__*/function(_React$Component){_inherits(AlgoHome,_React$Component);var _super=_createSuper(AlgoHome);function AlgoHome(){var _this;_classCallCheck(this,AlgoHome);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={mid:null,data:null,bad:null,outline:null,stops:0,mode:'eq',missing:false};_this.setValues=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(stops,valPairs,states){var req,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('submitted');console.log(valPairs);_context.next=4;return axios.get(\"https://mitinerary-js.herokuapp.com/\".concat(valPairs,\"/\").concat(states,\"/confirm\"));case 4:req=_context.sent;console.log(req);if(!(typeof req.data===\"string\"||typeof req.data[0]===\"string\")){_context.next=12;break;}console.log(\"bad\",req);_this.setState({bad:req.data[0]?req.data[0]:req.data});return _context.abrupt(\"return\");case 12:data=req.data;console.log(typeof data);//need error handling here\n//some redundancy with start/stop & data, but trouble otherwise\n_this.setState({stops:parseInt(stops),data:data[0],distance:data[1],bad:null,outline:null});case 15:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2,_x3){return _ref.apply(this,arguments);};}();_this.setMode=function(mode){_this.setState({mode:mode});};_this.launchAlgo=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var trip;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"https://mitinerary-js.herokuapp.com/\".concat(_this.state.mode,\"/algoPlan\"));case 2:trip=_context2.sent;console.log(\"this heres the trip\",trip.data[0]);_this.props.receiveTrip(trip.data);return _context2.abrupt(\"return\");case 6:case\"end\":return _context2.stop();}}},_callee2);}));_this.extraStops=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(arr){var qs,_iterator,_step,m,ordered,trip;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log('extrastops called',arr);//note: doimg this would eliminate need to check distances for all, hugely reducing runtime but much more likely to cause rejection\n//adjust validity accordingly\nqs=\"\";_iterator=_createForOfIteratorHelper(arr);try{for(_iterator.s();!(_step=_iterator.n()).done;){m=_step.value;qs+='_'+m.index;}}catch(err){_iterator.e(err);}finally{_iterator.f();}console.log(qs);if(!qs){qs+=\"_\";}//want to set this to app component\n//is ordered even needed?Maybe as back up\n_context3.next=8;return axios.get(\"https://mitinerary-js.herokuapp.com/\".concat(qs,\"/order\"));case 8:ordered=_context3.sent;//have to plan first implement as function rather than req \nconsole.log(\"ordered\",ordered);_context3.next=12;return axios.get(\"https://mitinerary-js.herokuapp.com/plan\");case 12:trip=_context3.sent;//here is the issue: ordered returns the full list\n//have to set up DLL here instead of in other doc\n//const outline=await axios.get()\n_this.setState({mid:arr,outline:trip});//!!!!: The qs wont be the cities themselves, but rather relative order based on order added\n//Also keeps track of any that were removed\n//checks distance from starting city to each added city\n//orders based on distance\n//checks validity assuming rest of stops are valid\n//if stop is invalid, removes, recalculates validity based on new number of stops\n//once list is calculated, compares total stops to stops used, assigns midpoints accordingly\ncase 14:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x4){return _ref3.apply(this,arguments);};}();_this.clearState=function(){_this.setState({mid:null,data:null,distance:null,bad:null});};return _this;}_createClass(AlgoHome,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AlgoSearchHome,{launch:this.launchAlgo,mode:this.state.mode,setMode:this.setMode,outline:this.state.outline,data:this.state.data,distance:this.state.distance,setValues:this.setValues,clearState:this.clearState,extraStops:this.extraStops,bad:this.state.bad})});}}]);return AlgoHome;}(React.Component);export default AlgoHome;","map":{"version":3,"names":["React","axios","AlgoSearchHome","AlgoHome","state","mid","data","bad","outline","stops","mode","missing","setValues","valPairs","states","console","log","get","req","setState","parseInt","distance","setMode","launchAlgo","trip","props","receiveTrip","extraStops","arr","qs","m","index","ordered","clearState","Component"],"sources":["/Users/ethan/Desktop/Code/miTinerary-official/client/src/components/Algo/AlgoHome.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\"\nimport AlgoSearchHome from \"./Search/AlgoSearchHome\";\n\nclass AlgoHome extends React.Component{\n    //what does the stops state do? Backup I guess\n    state={mid:null,data:null,bad:null,outline:null,stops:0,mode:'eq',missing:false}\n    setValues=async(stops,valPairs,states)=>{\n        console.log('submitted')\n        console.log(valPairs)\n        const req=await axios.get(`https://mitinerary-js.herokuapp.com/${valPairs}/${states}/confirm`)\n        console.log(req)\n        if(typeof req.data===\"string\"||typeof req.data[0]===\"string\"){\n            console.log(\"bad\",req)\n            this.setState({bad:req.data[0]?req.data[0]:req.data})\n            return\n        }else{\n            const data=req.data\n            console.log(typeof data)\n            //need error handling here\n            //some redundancy with start/stop & data, but trouble otherwise\n            this.setState({stops:parseInt(stops),data:data[0],distance:data[1],bad:null, outline:null})\n        }\n    }\n\n    setMode=(mode)=>{\n        this.setState({mode:mode})\n    }\n    launchAlgo=async()=>{\n        const trip=await axios.get(`https://mitinerary-js.herokuapp.com/${this.state.mode}/algoPlan`)\n        console.log(\"this heres the trip\",trip.data[0])\n        this.props.receiveTrip(trip.data)\n        return\n    }\n\n    extraStops=async(arr)=>{\n        console.log('extrastops called', arr)\n        //note: doimg this would eliminate need to check distances for all, hugely reducing runtime but much more likely to cause rejection\n        //adjust validity accordingly\n        let qs=\"\"\n        for(let m of arr){\n            qs+=('_'+m.index)\n        }\n        console.log(qs)\n        if(!qs){\n            qs+=\"_\"\n        }\n        //want to set this to app component\n        //is ordered even needed?Maybe as back up\n        const ordered=await axios.get(`https://mitinerary-js.herokuapp.com/${qs}/order`)\n        //have to plan first implement as function rather than req \n        console.log(\"ordered\",ordered)\n        const trip=await axios.get(`https://mitinerary-js.herokuapp.com/plan`)\n        //here is the issue: ordered returns the full list\n\n        //have to set up DLL here instead of in other doc\n\n        //const outline=await axios.get()\n        this.setState({mid:arr,outline:trip})\n\n        //!!!!: The qs wont be the cities themselves, but rather relative order based on order added\n        //Also keeps track of any that were removed\n\n\n        //checks distance from starting city to each added city\n        //orders based on distance\n        //checks validity assuming rest of stops are valid\n        //if stop is invalid, removes, recalculates validity based on new number of stops\n        //once list is calculated, compares total stops to stops used, assigns midpoints accordingly\n    }\n\n    clearState=()=>{\n        this.setState({mid:null,data:null,distance:null,bad:null})\n    }\n    render(){\n        return(\n            <div>\n                <AlgoSearchHome launch={this.launchAlgo} mode={this.state.mode} setMode={this.setMode} outline={this.state.outline} data={this.state.data} distance={this.state.distance} setValues={this.setValues} clearState={this.clearState} extraStops={this.extraStops} bad={this.state.bad}/>\n            </div>\n        )\n    }\n}\nexport default AlgoHome"],"mappings":"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"},"metadata":{},"sourceType":"module"}