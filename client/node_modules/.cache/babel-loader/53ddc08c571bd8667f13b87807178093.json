{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Code/myTinerary/mitinerary/client/src/components/display/components/Attractions/AttractionsHome.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Retrieve from \"./Retrieve\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttractionsHome = props => {\n  _s();\n  console.log(props.loc);\n  let activeH = props.loc.hotels ? props.loc.hotels : {};\n  let activeR = props.loc.restaurants ? props.loc.restaurants : {};\n  let activeA = props.loc.attractions ? props.loc.attractions : {};\n  console.log('active a', activeA);\n  const [attractions, setAttractions] = useState({\n    hotels: activeH,\n    restaurants: activeR,\n    attractions: activeA\n  });\n  const [loading, setLoading] = useState(true);\n  //need error handling\n  //saving canbe done with each add and remove with mongo, but want to reduce api calls\n  const save = async () => {\n    try {\n      let qs = \"\";\n      for (let key in attractions) {\n        if (key === 'hotels') {\n          qs += 'hotels_';\n        } else if (key === 'restaurants') {\n          qs += \"restaurants_\";\n        } else if (key === 'attractions') {\n          qs += 'attractions_';\n        }\n        console.log(attractions[key]);\n        for (let place in attractions[key]) {\n          console.log(attractions[key][place]);\n          if (key === 'hotels') {\n            qs = qs + attractions[key][place].hotel_id + \"_\";\n          } else {\n            qs = qs + attractions[key][place].location_id + \"_\";\n          }\n        }\n      }\n      const updated = await axios.get(`http://localhost:7000/sync/${props.selected}/${qs}`);\n      console.log('backend saved');\n      console.log('updated', updated.data);\n      props.receiveTrip(updated.data);\n    } catch {\n      console.log('error saving');\n    }\n  };\n\n  //could just put ids instead to improve speed above. Want to wait till i have db set up though before deciding\n  const add = (place, category) => {\n    console.log('add called');\n    let copy = Object.assign({}, attractions);\n    copy[category][place.name ? place.name : place.hotel_name] = place;\n    console.log(copy);\n    setAttractions(copy);\n  };\n  const remove = (place, category) => {\n    console.log('remove called');\n    let copy = Object.assign({}, attractions);\n    delete copy[category][place.name ? place.name : place.hotel_name];\n    setAttractions(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.go(false);\n        save();\n      },\n      children: \" Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-one-third\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginLeft: 170\n          },\n          children: \"Hotels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dispColumn\",\n          children: /*#__PURE__*/_jsxDEV(Retrieve, {\n            type: 'hotels',\n            loc: props.loc,\n            add: add,\n            remove: remove,\n            attractions: attractions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-one-third\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginLeft: 150\n          },\n          children: \"Restaurants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dispColumn\",\n          children: /*#__PURE__*/_jsxDEV(Retrieve, {\n            type: 'restaurants',\n            loc: props.loc,\n            add: add,\n            remove: remove,\n            attractions: attractions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-one-third dispColumn\",\n        children: /*#__PURE__*/_jsxDEV(Retrieve, {\n          type: 'attractions',\n          loc: props.loc,\n          add: add,\n          remove: remove,\n          attractions: attractions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n//Note: Attraction is passed as type because it is needed for api, switches to more succinct attr after\n_s(AttractionsHome, \"/1JFDnKa7nhds59mAupCO+Jljng=\");\n_c = AttractionsHome;\nexport default AttractionsHome;\nvar _c;\n$RefreshReg$(_c, \"AttractionsHome\");","map":{"version":3,"names":["axios","React","useState","Retrieve","AttractionsHome","props","console","log","loc","activeH","hotels","activeR","restaurants","activeA","attractions","setAttractions","loading","setLoading","save","qs","key","place","hotel_id","location_id","updated","get","selected","data","receiveTrip","add","category","copy","Object","assign","name","hotel_name","remove","go","marginLeft"],"sources":["/Users/ethan/Desktop/Code/myTinerary/mitinerary/client/src/components/display/components/Attractions/AttractionsHome.js"],"sourcesContent":["import axios from \"axios\";\nimport React,{useState} from \"react\";\nimport Retrieve from \"./Retrieve\";\n\nconst AttractionsHome=(props)=>{\n    console.log(props.loc)\n    let activeH=props.loc.hotels?props.loc.hotels:{}\n    let activeR=props.loc.restaurants?props.loc.restaurants:{}\n    let activeA=props.loc.attractions?props.loc.attractions:{}\n    console.log('active a',activeA)\n    const[attractions,setAttractions]=useState(\n        {hotels:activeH,restaurants:activeR,attractions:activeA}\n    )\n    const[loading,setLoading]=useState(true)\n    //need error handling\n    //saving canbe done with each add and remove with mongo, but want to reduce api calls\n    const save=async()=>{\n        try{\n            let qs=\"\"\n            for(let key in attractions){\n                if(key==='hotels'){\n                    qs+='hotels_'\n                }else if(key==='restaurants'){\n                    qs+=\"restaurants_\"\n                }else if(key==='attractions'){\n                    qs+='attractions_'\n                }\n                console.log(attractions[key])\n                for(let place in attractions[key]){\n                    console.log(attractions[key][place])\n                    if(key==='hotels'){\n                        qs=qs+attractions[key][place].hotel_id+\"_\"\n                    }else{\n                        qs=qs+attractions[key][place].location_id+\"_\"\n                    }\n                }\n            }\n            const updated=await axios.get(`http://localhost:7000/sync/${props.selected}/${qs}`)\n            console.log('backend saved')\n            console.log('updated',updated.data)\n            props.receiveTrip(updated.data)\n        }catch{\n            console.log('error saving')\n        }\n\n    }\n\n    //could just put ids instead to improve speed above. Want to wait till i have db set up though before deciding\n    const add=(place,category)=>{\n        console.log('add called')\n        let copy=Object.assign({},attractions)\n        copy[category][place.name?place.name:place.hotel_name]=place\n        console.log(copy)\n        setAttractions(copy)\n    }\n    const remove=(place,category)=>{\n        console.log('remove called')\n        let copy=Object.assign({},attractions)\n        delete copy[category][place.name?place.name:place.hotel_name]\n        setAttractions(copy)\n    }\n    return(\n        <div className=\"card\">\n            <button onClick={()=>{props.go(false);save()}}> Go back</button>\n            <div className=\"columns\">\n                <div className=\"column-one-third\">\n                    <h1 style={{marginLeft:170}}>Hotels</h1>\n                    <div className=\"dispColumn\">\n                        <Retrieve type={'hotels'}loc={props.loc} add={add} remove={remove} attractions={attractions}/>\n                    </div>\n                </div>\n                <div className=\"column-one-third\">\n                    <h1 style={{marginLeft:150}}>Restaurants</h1>\n                    <div className=\"dispColumn\">\n                        <Retrieve type={'restaurants'} loc={props.loc} add={add} remove={remove} attractions={attractions}/>\n                    </div>\n                </div>\n                <div className=\"column-one-third dispColumn\">\n                    <Retrieve type={'attractions'} loc={props.loc} add={add} remove={remove} attractions={attractions}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n//Note: Attraction is passed as type because it is needed for api, switches to more succinct attr after\n\nexport default AttractionsHome"],"mappings":"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"},"metadata":{},"sourceType":"module"}