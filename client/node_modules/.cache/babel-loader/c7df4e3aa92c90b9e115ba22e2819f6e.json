{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Code/myTinerary/client/src/components/Algo/AlgoHome.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport AlgoSearchHome from \"./Search/AlgoSearchHome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AlgoHome extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      start: null,\n      end: null,\n      mid: null,\n      data: null,\n      bad: null,\n      outline: null,\n      stops: 0,\n      launch: false\n    };\n    this.setValues = async (stops, valPairs) => {\n      console.log(valPairs);\n      const req = await axios.get(`http://localhost:7000/${valPairs}/confirm`);\n      if (typeof req === \"string\") {\n        console.log(req);\n        this.setState({\n          bad: req\n        });\n        return;\n      }\n      const data = req.data;\n      console.log(data);\n      //need error handling here\n\n      //some redundancy with start/stop & data, but trouble otherwise\n      this.setState({\n        stops: parseInt(stops),\n        start: data[0][0],\n        stop: data[0][1],\n        data: data[0],\n        distance: data[1],\n        bad: null\n      });\n    };\n    this.extraStops = async arr => {\n      console.log('extrastops called', arr);\n      //note: doimg this would eliminate need to check distances for all, hugely reducing runtime but much more likely to cause rejection\n      //adjust validity accordingly\n      let qs = \"\";\n      for (let m of arr) {\n        qs += '_' + m.index;\n      }\n      console.log(qs);\n      if (!qs) {\n        qs += \"_\";\n      }\n      //want to set this to app component\n      const ordered = await axios.get(`http://localhost:7000/${qs}/order`);\n      console.log(\"ordered\", ordered);\n      //here is the issue: ordered returns the full list\n      //const outline=await axios.get()\n      this.setState({\n        mid: arr,\n        outline: ordered\n      });\n\n      //!!!!: The qs wont be the cities themselves, but rather relative order based on order added\n      //Also keeps track of any that were removed\n\n      //checks distance from starting city to each added city\n      //orders based on distance\n      //checks validity assuming rest of stops are valid\n      //if stop is invalid, removes, recalculates validity based on new number of stops\n      //once list is calculated, compares total stops to stops used, assigns midpoints accordingly\n    };\n    this.clearState = () => {\n      this.setState({\n        start: null,\n        end: null,\n        mid: null,\n        data: null,\n        distance: null,\n        bad: null\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AlgoSearchHome, {\n        outline: this.state.outline,\n        data: this.state.data,\n        distance: this.state.distance,\n        setValues: this.setValues,\n        clearState: this.clearState,\n        extraStops: this.extraStops,\n        bad: this.state.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AlgoHome;","map":{"version":3,"names":["React","axios","AlgoSearchHome","AlgoHome","Component","state","start","end","mid","data","bad","outline","stops","launch","setValues","valPairs","console","log","req","get","setState","parseInt","stop","distance","extraStops","arr","qs","m","index","ordered","clearState","render"],"sources":["/Users/ethan/Desktop/Code/myTinerary/client/src/components/Algo/AlgoHome.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\"\nimport AlgoSearchHome from \"./Search/AlgoSearchHome\";\n\nclass AlgoHome extends React.Component{\n    state={start:null,end:null,mid:null,data:null,bad:null,outline:null,stops:0,launch:false}\n    setValues=async(stops,valPairs)=>{\n        console.log(valPairs)\n        const req=await axios.get(`http://localhost:7000/${valPairs}/confirm`)\n        if(typeof req===\"string\"){\n            console.log(req)\n            this.setState({bad:req})\n            return\n        }\n        const data=req.data\n        console.log(data)\n        //need error handling here\n\n        //some redundancy with start/stop & data, but trouble otherwise\n        this.setState({stops:parseInt(stops),start:data[0][0],stop:data[0][1],data:data[0],distance:data[1],bad:null})\n    }\n\n    extraStops=async(arr)=>{\n        console.log('extrastops called', arr)\n        //note: doimg this would eliminate need to check distances for all, hugely reducing runtime but much more likely to cause rejection\n        //adjust validity accordingly\n        let qs=\"\"\n        for(let m of arr){\n            qs+=('_'+m.index)\n        }\n        console.log(qs)\n        if(!qs){\n            qs+=\"_\"\n        }\n        //want to set this to app component\n        const ordered=await axios.get(`http://localhost:7000/${qs}/order`)\n        console.log(\"ordered\",ordered)\n        //here is the issue: ordered returns the full list\n        //const outline=await axios.get()\n        this.setState({mid:arr,outline:ordered})\n\n        //!!!!: The qs wont be the cities themselves, but rather relative order based on order added\n        //Also keeps track of any that were removed\n\n\n        //checks distance from starting city to each added city\n        //orders based on distance\n        //checks validity assuming rest of stops are valid\n        //if stop is invalid, removes, recalculates validity based on new number of stops\n        //once list is calculated, compares total stops to stops used, assigns midpoints accordingly\n    }\n\n    clearState=()=>{\n        this.setState({start:null,end:null,mid:null,data:null,distance:null,bad:null})\n    }\n    render(){\n        return(\n            <div>\n                <AlgoSearchHome outline={this.state.outline} data={this.state.data} distance={this.state.distance} setValues={this.setValues} clearState={this.clearState} extraStops={this.extraStops} bad={this.state.bad}/>\n            </div>\n        )\n    }\n}\nexport default AlgoHome"],"mappings":"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"},"metadata":{},"sourceType":"module"}