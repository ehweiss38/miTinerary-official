{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Code/mainMi/client/src/components/display/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, MarkerF, DirectionsRenderer } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = props => {\n  _s();\n  const [markers, setMarkers] = useState(null);\n  const [secondaryMarkers, setSecondary] = useState(null);\n  const [directions, setDirections] = useState(null);\n  useEffect(() => {\n    console.log('called');\n    const markersArr = props.tripArr.map(place => {\n      console.log(place);\n      return /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat: place.latitude,\n          lng: place.longitude\n        },\n        icon: {\n          scale: 6\n        }\n      }, place.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    });\n    setMarkers(markersArr);\n  }, [props.tripArr]);\n  useEffect(() => {\n    console.log('running sec', props.tripArr[props.selected]);\n    let secMarkersCollection = [];\n    if (props.selected === null) {\n      setSecondary(null);\n      return;\n    }\n    if (props.tripArr[props.selected].hotels) {\n      console.log('hotel');\n      const hMarks = [];\n      const list = props.tripArr[props.selected].hotels;\n      for (let hotel in list) {\n        hMarks.push( /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: {\n            lat: list[hotel].latitude,\n            lng: list[hotel].longitude\n          },\n          icon: {\n            scale: 3,\n            strokeColor: 'white',\n            fillColor: 'pink'\n          },\n          label: list[hotel].hotel_name\n        }, list[hotel].hotel_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this));\n      }\n      secMarkersCollection = secMarkersCollection.concat(hMarks);\n    }\n    if (props.tripArr[props.selected].restaurants) {\n      const rMarks = [];\n      const list = props.tripArr[props.selected].restaurants;\n      for (let rest in list) {\n        rMarks.push( /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: {\n            lat: parseFloat(list[rest].latitude),\n            lng: parseFloat(list[rest].longitude)\n          },\n          icon: {\n            url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\n          },\n          label: list[rest].name\n        }, list[rest].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this));\n      }\n      secMarkersCollection = secMarkersCollection.concat(rMarks);\n    }\n    if (props.tripArr[props.selected].attractions) {\n      const aMarks = [];\n      const list = props.tripArr[props.selected].attractions;\n      for (let attr in list) {\n        aMarks.push( /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: {\n            lat: parseFloat(list[attr].latitude),\n            lng: parseFloat(list[attr].longitude)\n          },\n          icon: {\n            url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\n          },\n          label: list[attr].name\n        }, list[attr].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this));\n      }\n      secMarkersCollection = secMarkersCollection.concat(aMarks);\n    }\n    console.log(secMarkersCollection);\n    if (secMarkersCollection.length) {\n      setSecondary(secMarkersCollection);\n    }\n    return;\n  });\n  useEffect(() => {\n    console.log('called');\n    if (!props.selected) {\n      return;\n    }\n    let use;\n    if (props.selected === props.tripArr.length - 1) {\n      use = props.selected - 1;\n    } else {\n      use = props.selected;\n    }\n    //add abort controller\n    (async () => {\n      const dir = new window.google.maps.DirectionsService();\n      const result = await dir.route({\n        origin: {\n          lat: props.tripArr[use].latitude,\n          lng: props.tripArr[use].longitude\n        },\n        destination: {\n          lat: props.tripArr[use + 1].latitude,\n          lng: props.tripArr[use + 1].longitude\n        },\n        travelMode: window.google.maps.TravelMode.DRIVING\n      });\n      console.log('result', result);\n      setDirections(result);\n    })();\n  }, [secondaryMarkers, props.selected, props.tripArr]);\n  const loadedMarkers = markers ? markers : '';\n  const loadedDirections = directions ? /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n    directions: directions.routes[0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 39\n  }, this) : '';\n  let current = props.selected || props.selected === 0 ? {\n    lat: props.tripArr[props.selected].latitude,\n    lng: props.tripArr[props.selected].longitude,\n    zoom: 12\n  } : {\n    lat: props.tripArr[Math.floor(props.tripArr.length / 2)].latitude,\n    lng: props.tripArr[Math.floor(props.tripArr.length / 2)].longitude,\n    zoom: props.zoom\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    zoom: current.zoom,\n    center: {\n      lat: current.lat,\n      lng: current.lng\n    },\n    mapContainerClassName: \"map-container\",\n    options: {\n      fullScreenControl: false\n    },\n    children: [loadedMarkers, loadedDirections, secondaryMarkers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"GVRVTyNqu0I7bBU1fJTA9hZISXY=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","MarkerF","DirectionsRenderer","Map","props","markers","setMarkers","secondaryMarkers","setSecondary","directions","setDirections","console","log","markersArr","tripArr","map","place","lat","latitude","lng","longitude","scale","name","selected","secMarkersCollection","hotels","hMarks","list","hotel","push","strokeColor","fillColor","hotel_name","concat","restaurants","rMarks","rest","parseFloat","url","attractions","aMarks","attr","length","use","dir","window","google","maps","DirectionsService","result","route","origin","destination","travelMode","TravelMode","DRIVING","loadedMarkers","loadedDirections","routes","current","zoom","Math","floor","fullScreenControl"],"sources":["/Users/ethan/Desktop/Code/mainMi/client/src/components/display/components/Map/Map.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {GoogleMap,MarkerF,DirectionsRenderer} from '@react-google-maps/api';\n\n\nconst Map=(props)=>{\n    const[markers,setMarkers]=useState(null)\n    const [secondaryMarkers,setSecondary]=useState(null)\n    const[directions,setDirections]=useState(null)\n\n    useEffect(()=>{\n        console.log('called')\n        const markersArr=props.tripArr.map((place)=>{\n            console.log(place)\n            return <MarkerF position={{lat:place.latitude,lng:place.longitude}} icon={{scale:6}}key={place.name}/>\n        })\n        setMarkers(markersArr)\n    },[props.tripArr])\n\n    useEffect(()=>{\n        console.log('running sec',props.tripArr[props.selected])\n        let secMarkersCollection=[]\n        if(props.selected===null){\n            setSecondary(null)\n            return\n        }\n        if(props.tripArr[props.selected].hotels){\n            console.log('hotel')\n            const hMarks=[]\n            const list=props.tripArr[props.selected].hotels\n            for(let hotel in list){\n                hMarks.push(<MarkerF position={{lat:list[hotel].latitude,lng:list[hotel].longitude}} icon={{scale:3,strokeColor:'white',fillColor:'pink'}}label={list[hotel].hotel_name}key={list[hotel].hotel_name}/>)\n            }\n            secMarkersCollection=secMarkersCollection.concat(hMarks)\n        }\n        if(props.tripArr[props.selected].restaurants){\n            const rMarks=[]\n            const list=props.tripArr[props.selected].restaurants\n            for(let rest in list){\n                rMarks.push(<MarkerF position={{lat:parseFloat(list[rest].latitude),lng:parseFloat(list[rest].longitude)}} icon={{url:'http://maps.google.com/mapfiles/ms/icons/green-dot.png'}} label={list[rest].name}key={list[rest].name}/>)\n            }\n            secMarkersCollection=secMarkersCollection.concat(rMarks)\n        }\n        if(props.tripArr[props.selected].attractions){\n            const aMarks=[]\n            const list=props.tripArr[props.selected].attractions\n            for (let attr in list){\n                aMarks.push(<MarkerF position={{lat:parseFloat(list[attr].latitude),lng:parseFloat(list[attr].longitude)}} icon={{url:'http://maps.google.com/mapfiles/ms/icons/green-dot.png'}} label={list[attr].name}key={list[attr].name}/>)\n            }\n            secMarkersCollection=secMarkersCollection.concat(aMarks)\n        }\n        console.log(secMarkersCollection)\n        if(secMarkersCollection.length){\n            setSecondary(secMarkersCollection)\n        }\n        return\n    })\n\n    useEffect(()=>{\n        console.log('called')\n        if(!props.selected){\n            return\n        }\n        let use\n        if(props.selected===props.tripArr.length-1){\n            use=props.selected-1\n        }else{\n            use=props.selected\n        }\n        //add abort controller\n        (async()=>{\n            const dir= new window.google.maps.DirectionsService()\n            const result=await dir.route({\n                origin: {lat:props.tripArr[use].latitude,lng:props.tripArr[use].longitude},\n                destination: {lat:props.tripArr[use+1].latitude,lng:props.tripArr[use+1].longitude},\n                travelMode: window.google.maps.TravelMode.DRIVING\n            })\n            console.log('result',result)\n            setDirections(result)\n        })()\n    },[secondaryMarkers,props.selected,props.tripArr])\n\n    const loadedMarkers=markers?markers:''\n\n    const loadedDirections=directions?<DirectionsRenderer directions={directions.routes[0]}/>:''\n    let current=props.selected||props.selected===0?\n        {lat:props.tripArr[props.selected].latitude,lng:props.tripArr[props.selected].longitude,zoom:12}:\n        {lat:props.tripArr[Math.floor(props.tripArr.length/2)].latitude,lng:props.tripArr[Math.floor(props.tripArr.length/2)].longitude,zoom:props.zoom}\n    return(\n        <GoogleMap zoom={current.zoom} center={{lat:current.lat,lng:current.lng}} mapContainerClassName=\"map-container\" options={{fullScreenControl:false}}>\n            {loadedMarkers}\n            {loadedDirections}\n            {secondaryMarkers}\n        </GoogleMap>\n    )\n}\n\nexport default Map"],"mappings":"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"},"metadata":{},"sourceType":"module"}