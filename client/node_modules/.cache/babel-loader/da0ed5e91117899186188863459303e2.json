{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Code/myTinerary/mitinerary/client/src/components/display/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, MarkerF, DirectionsRenderer } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = async props => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    setMarkers(props.tripArr.map(place => {\n      console.log(place);\n      return /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat: place.latitude,\n          lng: place.longitude\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    }));\n  }, [props.tripArr]);\n  const loadedDirections = directions ? /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n    directions: {\n      directions\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 39\n  }, this) : '';\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    zoom: 10,\n    center: {\n      lat: props.tripArr[props.selected].latitude,\n      lng: props.tripArr[props.selected].longitude\n    },\n    mapContainerClassName: \"map-container\",\n    options: {\n      fullScreenControl: false\n    },\n    children: markers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"+gMjw6PVkWea2Z8ktV2yJ/TiiLw=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","MarkerF","DirectionsRenderer","Map","props","markers","setMarkers","tripArr","map","place","console","log","lat","latitude","lng","longitude","loadedDirections","directions","selected","fullScreenControl"],"sources":["/Users/ethan/Desktop/Code/myTinerary/mitinerary/client/src/components/display/components/Map/Map.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {GoogleMap,MarkerF,DirectionsRenderer} from '@react-google-maps/api';\n\n\nconst Map=async(props)=>{\n    const[markers,setMarkers]=useState([])\n\n    useEffect(()=>{\n        setMarkers(props.tripArr.map((place)=>{\n            console.log(place)\n            return <MarkerF position={{lat:place.latitude,lng:place.longitude}}/>\n        }))\n    },[props.tripArr])\n\n    const loadedDirections=directions?<DirectionsRenderer directions={{directions}}/>:''\n    return(\n        <GoogleMap zoom={10} center={{lat:props.tripArr[props.selected].latitude,lng:props.tripArr[props.selected].longitude}} mapContainerClassName=\"map-container\" options={{fullScreenControl:false}}>\n            {markers}\n        </GoogleMap>\n    )\n}\n\nexport default Map"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAAQC,SAAS,EAACC,OAAO,EAACC,kBAAkB,QAAO,wBAAwB;AAAC;AAG5E,MAAMC,GAAG,GAAC,MAAMC,KAAK,IAAG;EAAA;EACpB,MAAK,CAACC,OAAO,EAACC,UAAU,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAI;IACVO,UAAU,CAACF,KAAK,CAACG,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAG;MAClCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,oBAAO,QAAC,OAAO;QAAC,QAAQ,EAAE;UAACG,GAAG,EAACH,KAAK,CAACI,QAAQ;UAACC,GAAG,EAACL,KAAK,CAACM;QAAS;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IACzE,CAAC,CAAC,CAAC;EACP,CAAC,EAAC,CAACX,KAAK,CAACG,OAAO,CAAC,CAAC;EAElB,MAAMS,gBAAgB,GAACC,UAAU,gBAAC,QAAC,kBAAkB;IAAC,UAAU,EAAE;MAACA;IAAU;EAAE;IAAA;IAAA;IAAA;EAAA,QAAE,GAAC,EAAE;EACpF,oBACI,QAAC,SAAS;IAAC,IAAI,EAAE,EAAG;IAAC,MAAM,EAAE;MAACL,GAAG,EAACR,KAAK,CAACG,OAAO,CAACH,KAAK,CAACc,QAAQ,CAAC,CAACL,QAAQ;MAACC,GAAG,EAACV,KAAK,CAACG,OAAO,CAACH,KAAK,CAACc,QAAQ,CAAC,CAACH;IAAS,CAAE;IAAC,qBAAqB,EAAC,eAAe;IAAC,OAAO,EAAE;MAACI,iBAAiB,EAAC;IAAK,CAAE;IAAA,UAC3Ld;EAAO;IAAA;IAAA;IAAA;EAAA,QACA;AAEpB,CAAC;AAAA,GAhBKF,GAAG;AAAA,KAAHA,GAAG;AAkBT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}