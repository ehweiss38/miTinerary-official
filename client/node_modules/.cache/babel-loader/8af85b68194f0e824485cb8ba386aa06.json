{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Code/myTinerary/mitinerary/client/src/components/display/components/Attractions/AttractionsHome.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Retrieve from \"./Retrieve\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttractionsHome = props => {\n  _s();\n  console.log(props.loc);\n  const [attractions, setAttractions] = useState({\n    hotels: {},\n    restaurants: {},\n    attractions: {}\n  });\n  const save = async () => {\n    let qs = \"\";\n    for (let key in attractions) {\n      if (key === 'hotels') {\n        qs += 'hotels_';\n      } else if (key === 'restaurants') {\n        qs += \"restaurants_\";\n      } else if (key === 'attractions') {\n        qs += 'attractions_';\n      }\n      for (let place in key) {\n        console.log(place);\n        if (key === 'hotels') {\n          qs = qs + place.ufi + \"_\";\n        } else {\n          qs = qs + place.location_id + \"_\";\n        }\n      }\n    }\n    if (await axios.get(`https://localhost:7000/sync/${props.selected}/${qs}`)) {\n      console.log('backend saved');\n    }\n  };\n\n  //could just put ids instead to improve speed above. Want to wait till i have db set up though before deciding\n  const add = (place, category) => {\n    console.log('add called');\n    let copy = Object.assign({}, attractions);\n    copy[category][place.name ? place.name : place.hotel_name] = place;\n    console.log(copy);\n    setAttractions(copy);\n  };\n  const remove = (place, category) => {\n    console.log('remove called');\n    let copy = Object.assign({}, attractions);\n    delete copy[category][place.name ? place.name : place.hotel_name];\n    setAttractions(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.go(false);\n        save();\n      },\n      children: \" Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-one-third\",\n        children: /*#__PURE__*/_jsxDEV(Retrieve, {\n          type: 'hotels',\n          loc: props.loc,\n          add: add,\n          remove: remove,\n          attractions: attractions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-one-third\",\n        children: /*#__PURE__*/_jsxDEV(Retrieve, {\n          type: 'restaurants',\n          loc: props.loc,\n          add: add,\n          remove: remove,\n          attractions: attractions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-one-third\",\n        children: /*#__PURE__*/_jsxDEV(Retrieve, {\n          type: 'attractions',\n          loc: props.loc,\n          add: add,\n          remove: remove,\n          attractions: attractions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n//Note: Attraction is passed as type because it is needed for api, switches to more succinct attr after\n_s(AttractionsHome, \"6F389F9wxtBGrvJPESBdztNlAYQ=\");\n_c = AttractionsHome;\nexport default AttractionsHome;\nvar _c;\n$RefreshReg$(_c, \"AttractionsHome\");","map":{"version":3,"names":["axios","React","useState","Retrieve","AttractionsHome","props","console","log","loc","attractions","setAttractions","hotels","restaurants","save","qs","key","place","ufi","location_id","get","selected","add","category","copy","Object","assign","name","hotel_name","remove","go"],"sources":["/Users/ethan/Desktop/Code/myTinerary/mitinerary/client/src/components/display/components/Attractions/AttractionsHome.js"],"sourcesContent":["import axios from \"axios\";\nimport React,{useState} from \"react\";\nimport Retrieve from \"./Retrieve\";\n\nconst AttractionsHome=(props)=>{\n    console.log(props.loc)\n\n    const[attractions,setAttractions]=useState({hotels:{},restaurants:{},attractions:{}})\n\n    const save=async()=>{\n        let qs=\"\"\n        for(let key in attractions){\n            if(key==='hotels'){\n                qs+='hotels_'\n            }else if(key==='restaurants'){\n                qs+=\"restaurants_\"\n            }else if(key==='attractions'){\n                qs+='attractions_'\n            }\n            for(let place in key){\n                console.log(place)\n                if(key==='hotels'){\n                    qs=qs+place.ufi+\"_\"\n                }else{\n                    qs=qs+place.location_id+\"_\"\n                }\n            }\n        }\n        if(await axios.get(`https://localhost:7000/sync/${props.selected}/${qs}`)){\n            console.log('backend saved')\n        }\n    }\n\n    //could just put ids instead to improve speed above. Want to wait till i have db set up though before deciding\n    const add=(place,category)=>{\n        console.log('add called')\n        let copy=Object.assign({},attractions)\n        copy[category][place.name?place.name:place.hotel_name]=place\n        console.log(copy)\n        setAttractions(copy)\n    }\n    const remove=(place,category)=>{\n        console.log('remove called')\n        let copy=Object.assign({},attractions)\n        delete copy[category][place.name?place.name:place.hotel_name]\n        setAttractions(copy)\n    }\n    return(\n        <div className=\"card\">\n            <button onClick={()=>{props.go(false);save()}}> Go back</button>\n            <div className=\"columns\">\n                <div className=\"column-one-third\">\n                    <Retrieve type={'hotels'}loc={props.loc} add={add} remove={remove} attractions={attractions}/>\n                </div>\n                <div className=\"column-one-third\">\n                    <Retrieve type={'restaurants'} loc={props.loc} add={add} remove={remove} attractions={attractions}/>\n                </div>\n                <div className=\"column-one-third\">\n                    <Retrieve type={'attractions'} loc={props.loc} add={add} remove={remove} attractions={attractions}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n//Note: Attraction is passed as type because it is needed for api, switches to more succinct attr after\n\nexport default AttractionsHome"],"mappings":"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"},"metadata":{},"sourceType":"module"}